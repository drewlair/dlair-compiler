#ifndef TOKEN_H
#define TOKEN_H

#define TOKEN_EOF 0
#define TOKEN_IDENT 256
#define TOKEN_INTEGER 257
#define TOKEN_FLOAT 258
#define TOKEN_CHAR_LITERAL 259
#define TOKEN_STRING 260
#define TOKEN_BOOLEAN 263
#define TOKEN_EE 264
#define TOKEN_GE 265
#define TOKEN_LE 266
#define TOKEN_AND 267
#define TOKEN_OR 268
#define TOKEN_STRING_LITERAL 269
#define TOKEN_INTEGER_LITERAL 270
#define TOKEN_BOOLEAN_LITERAL 271
#define TOKEN_ARR 272
#define TOKEN_SEMICOLON 273
#define TOKEN_FLOAT_LITERAL 275
#define TOKEN_INCREMENT 276
#define TOKEN_DECREMENT 277
#define TOKEN_NOT 278
#define TOKEN_MULT 279
#define TOKEN_ADD 280
#define TOKEN_SUB 281
#define TOKEN_DIV 282
#define TOKEN_ASSIGN 283
#define TOKEN_MOD 284
#define TOKEN_EXP 285
#define TOKEN_GROUPING 286
#define TOKEN_ARR_SUBSCRIPT 287
#define TOKEN_FUNC_CALL 288
#define TOKEN_LT 289
#define TOKEN_GT 290
#define TOKEN_C_COMMENT 291
#define TOKEN_CPP_COMMENT 292
#define TOKEN_AUTO 293
#define TOKEN_VOID 294
#define TOKEN_FUNCTION 295
#define TOKEN_RETURN 296
#define TOKEN_COLON 297
#define TOKEN_COMMA 298
#define TOKEN_PRINT 299
#define TOKEN_NEGATE 300
#define TOKEN_IF 301
#define TOKEN_WHILE 302
#define TOKEN_FOR 303
#define TOKEN_ELSEIF 304
#define TOKEN_FSLASH 305
#define TOKEN_OPEN_BRACK 306
#define TOKEN_CLOSED_BRACK 307
#define TOKEN_OPEN_BRACE 308
#define TOKEN_CLOSED_BRACE 309
#define TOKEN_OPEN_PAR 310
#define TOKEN_CLOSED_PAR 311
#define TOKEN_CHAR 312
#define TOKEN_ELSE 313
#define TOKEN_NE 314


#define TOKEN_ERROR 330



#endif
